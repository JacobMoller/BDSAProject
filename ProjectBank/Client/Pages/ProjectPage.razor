@page "/project/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject HttpClient Http
@inject IJSRuntime _jsRuntime

<PageTitle>Project</PageTitle>

<div class="container">
    @if (@project == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <div class="row">
            <div class="col-8">
                <button @onclick="GoBack" class="btn btn-primary px-4 mt-2">Go Back</button>
                <h1>@project.Title</h1>
                <h3>By @user.Name</h3>
                <h4>Tags
                    @foreach (var tag in project.Tags)
                    {
                        <span class="badge bg-secondary me-2">@tag</span>
                    }
                </h4>
                <p>@project.Description</p>
            </div>
            <AuthorizeView Roles="Student">
                <Authorized>
<<<<<<< HEAD
                    <div class="col"> 
                    @if (!Applied)
                    {
                        <button class="btn btn-primary px-4 mt-2" type="submit" @onclick="Apply">@ApplyText</button>
                    }
                    else
                    {
                        <button class="btn btn-secondary px-4 mt-2" disabled>@ApplyText</button>
                    }
=======
                    <div class="col">
                        @if (!Applied)
                        {
                            <button class="btn btn-primary px-4 mt-2" type="submit" @onclick="Apply">@ApplyText</button>
                        }
                        else
                        {
                            <button class="btn btn-secondary px-4 mt-2" disabled>@ApplyText</button>
                        }
>>>>>>> main
                    </div>
                </Authorized>
            </AuthorizeView>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private ProjectDTO? project;
<<<<<<< HEAD
=======
    private UserDetailsDTO? user;

>>>>>>> main
    private string ApplyText = "Apply";
    private bool Applied;
    private async void Apply()
    {
        //take id from student user and make a connection with the project
<<<<<<< HEAD
        if(Id != 0 && !ProjectFullCheck() && !UserIsParticipant()) {
            var response = await Http.PutAsJsonAsync($"api/Apply/{Id}", project);
        }
=======
        if (Id != 0 && !ProjectFullCheck() && !UserIsParticipant())
        {
            var response = await Http.PutAsJsonAsync($"api/Apply/{Id}", project);
        }
    }

    private async void GoBack()
    {
        await _jsRuntime.InvokeVoidAsync("history.go", -1);
>>>>>>> main
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            project = await Http.GetFromJsonAsync<ProjectDTO>($"api/projects/{Id}");
            if (project != null)
            {
                user = await Http.GetFromJsonAsync<UserDetailsDTO>($"api/User/{project.SupervisorId}");
            }
        }
        ProjectFullCheck();
        UserIsParticipant();

        await base.OnParametersSetAsync();
    }

<<<<<<< HEAD
    bool ProjectFullCheck() {
        if(project != null && project.Participants.Count == 5){
=======
    bool ProjectFullCheck()
    {
        if (project.Participants.Count == 5)
        {
>>>>>>> main
            ApplyText = "Applied";
            Applied = true;
            return true;
        }
        return false;
    }

<<<<<<< HEAD
    bool UserIsParticipant(){
        string UserId = "1"; //TODO: replace this with the actual userid
        if(project != null){
            for (int i = 0; i < project.Participants.Count; i++)
            {
                if(project.Participants.ElementAt(i).Id == UserId){
                    ApplyText = "Applied";
                    Applied = true;
                    return true;
                }
=======
    bool UserIsParticipant()
    {
        string UserId = "1"; //TODO: replace this with the actual userid
        for (int i = 0; i < project.Participants.Count; i++)
        {
            if (project.Participants.ElementAt(i).Id == UserId)
            {
                ApplyText = "Applied";
                Applied = true;
                return true;
>>>>>>> main
            }
        }
        return false;
    }
}
