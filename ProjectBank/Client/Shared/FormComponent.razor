@inject NavigationManager NavigationManager
@inject HttpClient Http



        <EditForm Model="@project" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label class="form-label">Title</label>
                <InputText id="title" class="form-control" @bind-Value="project.Title" />
            </div>

            <div class="mb-3">
                <label class="form-label">Description</label>
                    <InputTextArea id="description" class="form-control" @bind-Value="project.Description" />
            </div>

            <div class="mb-3">
                <label class="form-label">Tags</label>
                    <InputText id="tags" class="form-control" @bind-Value="@tagListString"/>
            </div>
            <button type="submit" class="btn btn-success">@ButtonName</button>
        </EditForm> 
  

@code {
    [Parameter]
    public CreateProjectDTO project {get; set;}

    [Parameter]
    public string ButtonName {get; set;}

    private string tagListString = "";

    private async Task HandleValidSubmit() {
        string[] tags = Regex.Split(tagListString, @"\W");  
        project.Tags = tags;

        var response = await Http.PostAsJsonAsync("api/Projects", project);

        if(response.IsSuccessStatusCode){

            var created = await response.Content.ReadFromJsonAsync<ProjectDTO>();

            var uri = $"{NavigationManager.BaseUri}/MyProjects";

            NavigationManager.NavigateTo(uri);
        }
    }
    
    //receiving a list of tags that have to be displayed
    /*protected override void OnInitialized() {
        if (project.Tags != null) {
            foreach (var tag in project.Tags)
            {
                tagListString += tag.Name + ", ";
            }
            tagListString = tagListString.TrimEnd(',',' ');
        }
    }*/
}