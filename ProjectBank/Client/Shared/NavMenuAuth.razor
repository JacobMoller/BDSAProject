
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@attribute [Authorize(Roles = "Supervisor")]

<AuthorizeView>
<Authorized>

<div class="@NavMenuCssClass">
        <div class="@NavMenuFlexCssClass "> 
            <div class="nav-item p-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Explore
                </NavLink>
            </div>
                    @if (@context.User.IsInRole("Supervisor"))
                    {
                        <div class="nav-item p-3">
                            <NavLink class="nav-link" href="MyProjects">
                                <span class="oi oi-plus" aria-hidden="true"></span> Create Project
                            </NavLink>
                        </div>   
                    }      
            <div class="nav-item p-3">
                <NavLink class="nav-link" href="project/1/">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> My Projects
                </NavLink>
            </div>
    
     </div>
       </div>
</Authorized>
</AuthorizeView>


@code {
    private bool collapseNavMenu = true;

    private bool loggedin = true;


    private string? NavMenuCssClass => collapseNavMenu ? "collapse col-md-auto" : null;
    private string? NavMenuFlexCssClass => collapseNavMenu ? "d-flex justify-content-end" : null;
    private string? NavMenuColCssClass => collapseNavMenu ? "col" : null;

   

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

}
